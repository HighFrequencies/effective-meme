# This workflow will triage pull requests and apply a label based on the
# paths that are modified in the pull request.
#
# To use this workflow, you will need to set up a .github/labeler.yml
# file with configuration.  For more information, see:
# https://github.com/actions/labeler

name: Update Issue Project Status

on:
  issues:
    types: [labeled]

jobs:
  update-project-status:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Update Project Status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LABEL=${{ github.event.label.name }}
          ISSUE_NUMBER=${{ github.event.issue.number }}
          REPO=${{ github.repository }}
          
          if [ "$LABEL" = "bug" ]; then
            STATUS="Security"
          elif [ "$LABEL" = "feature-request" ]; then
            STATUS="Enhancement"
          else
            STATUS="Backlog"
          fi

          PROJECT_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.inertia-preview+json" https://api.github.com/repos/$REPO/projects | jq -r '.[0].id')
          ISSUE_URL=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.inertia-preview+json" https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER | jq -r '.html_url')
          COLUMN_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.inertia-preview+json" https://api.github.com/projects/$PROJECT_ID/columns | jq -r --arg STATUS "$STATUS" '.[] | select(.name == $STATUS) | .id')

          if [ -z "$COLUMN_ID" ]; then
            echo "Column $STATUS not found in the project."
            exit 1
          fi

          curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.inertia-preview+json" https://api.github.com/projects/columns/$COLUMN_ID/cards -d "{\"content_url\":\"$ISSUE_URL\"}"

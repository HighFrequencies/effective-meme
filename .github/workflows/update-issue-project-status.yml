name: Update Project Status Based on Label

on:
  issues:
    types: [labeled, unlabeled]
  pull_request:
    types: [labeled, unlabeled]

jobs:
  update-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Determine project column based on label
        id: determine-column
        run: |
          LABEL=${{ github.event.label.name }}
          if [[ "$LABEL" == "bug" ]]; then
            echo "column=Security" >> $GITHUB_ENV
          elif [[ "$LABEL" == "feature-request" ]]; then
            echo "column=Enhancement" >> $GITHUB_ENV
          else
            echo "column=Backlog" >> $GITHUB_ENV
          fi

      - name: Get issue or PR number
        id: get-issue-pr-number
        run: |
          if [[ "${{ github.event.pull_request }}" ]]; then
            echo "issue_or_pr=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          else
            echo "issue_or_pr=${{ github.event.issue.number }}" >> $GITHUB_ENV
          fi

      - name: Get project column ID
        id: get-column-id
        run: |
          PROJECT_ID=4905915  # Provided project ID
          COLUMN_NAME="${{ env.column }}"
          COLUMN_ID=$(gh api -X GET /projects/${PROJECT_ID}/columns --jq ".[] | select(.name == \"${COLUMN_NAME}\") | .id")
          if [ -z "$COLUMN_ID" ]; then
            echo "No column found or column ID could not be retrieved."
            exit 1
          fi
          echo "column_id=$COLUMN_ID" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update project column
        run: |
          ISSUE_OR_PR_NUMBER=${{ env.issue_or_pr }}
          gh api -X POST /projects/${{ env.project_id }}/columns/${{ env.column_id }}/cards \
            -f content_id=$ISSUE_OR_PR_NUMBER \
            -f content_type=Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

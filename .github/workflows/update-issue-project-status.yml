name: Handle Labels and Project Information

on:
  issues:
    types: [labeled, unlabeled]

jobs:
  find-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Get issue number
        id: get-issue-number
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Get repository ID
        id: get-repo-id
        run: |
          REPO_ID=$(gh repo view ${{ github.repository }} --json id -q '.id')
          echo "repo_id=$REPO_ID" >> $GITHUB_ENV

      - name: Query GitHub GraphQL API
        id: graphql-query
        run: |
          GRAPHQL_QUERY=$(cat <<EOF
          query {
            repository(owner: "${{ github.repository_owner }}", name: "${{ github.repository_name }}") {
              projectsV2(first: 5) {
                nodes {
                  id
                  title
                  items(first: 100) {
                    nodes {
                      id
                      content {
                        ... on Issue {
                          id
                        }
                        ... on PullRequest {
                          id
                        }
                      }
                    }
                  }
                }
              }
            }
            node(id: "UHJvamVjdDo0OTA1OTE1") {
              ... on ProjectV2 {
                id
                title
                items(first: 10) {
                  nodes {
                    id
                    content {
                      ... on Issue {
                        id
                        title
                      }
                      ... on PullRequest {
                        id
                        title
                      }
                    }
                  }
                }
              }
            }
          }
          EOF
          )
          RESPONSE=$(curl -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" -X POST -d "{\"query\": \"$GRAPHQL_QUERY\"}" https://api.github.com/graphql)
          echo "Response: $RESPONSE"
          echo "$RESPONSE" | jq .  # Print and format the response for debugging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse project information
        id: parse-project-info
        run: |
          # Extract project information
          PROJECT_INFO=$(echo "${{ steps.graphql-query.outputs.RESPONSE }}" | jq -r '.data.repository.projectsV2.nodes[] | select(.items.nodes[]?.content.id == ${{ env.issue_number }}) | {id: .id, title: .title}')
          if [ -z "$PROJECT_INFO" ]; then
            echo "No project found associated with the issue or repository."
            exit 1
          fi
          echo "Project Info: $PROJECT_INFO"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Project Information
        run: |
          echo "Debugging project information..."
          echo "Repository ID: ${{ env.repo_id }}"
          echo "Issue Number: ${{ env.issue_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
